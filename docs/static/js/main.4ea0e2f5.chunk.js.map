{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","item","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC/BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAOV,2BACIO,KAAO,OACPC,MAAST,EACTU,SApBgB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,Y,uBCRlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAoBZM,GApBY,4CAAH,sDCCPO,EAAc,SAAC,GAAW,IAAVL,EAAS,EAATA,IAGzB,OACI,yBAAKM,UAAY,0CACb,yBAAKC,IAAKP,EAAIR,IAAKgB,IAAMR,EAAIE,QAC7B,2BAAIF,EAAIE,SCHPO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECHwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAZAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAAAC,GAEnBH,EAAS,CACTf,KAAMkB,EACNL,SAAS,SAKd,CAACpB,IAEGqB,EDlBqDK,CAAa1B,GAA7Da,EAAZ,EAAON,KAAyCa,EAAhD,EAAgDA,QAEhD,OACI,oCACA,wBAAIJ,UAAY,qCAAsChB,GACrDoB,GAAW,uBAAGJ,UAAY,oCAAf,WACV,yBAAKA,UAAY,aAEPH,EAAOJ,KAAI,SAAAkB,GAAI,OAEX,kBAAC,EAAD,CACCC,IAAMD,EAAKhB,GACXD,IAAOiB,UEdlBE,EAAe,WAGzB,MAAoC3C,mBAAS,CAAC,kBAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAWA,OACA,oCACI,8CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BACA,4BAEQ6C,EAAWrB,KAAI,SAAAkB,GAAI,OAEf,kBAAC,EAAD,CACAC,IAAQD,EACR3B,SAAY2B,U,MCtBhCI,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.4ea0e2f5.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setinputValue] = useState('')\r\n\r\n    const handleOnChangeinput = (e) =>{\r\n        setinputValue(e.target.value)\r\n\r\n\r\n\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (inputValue.trim().length > 2) {\r\n        setCategories(cats => [inputValue, ...cats, ])\r\n        setinputValue('')\r\n        }\r\n       \r\n    }\r\n\r\n    return (\r\n        <form onSubmit = { handleSubmit }>\r\n            <input \r\n                type = 'text' \r\n                value= { inputValue }\r\n                onChange = { handleOnChangeinput }              \r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n\r\n\r\n}","export const getGifs = async(category) =>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=tiUPls294ek06FLoT68G9JITVlZ5Kbjb`\r\n    const resp = await fetch(url)\r\n    const {data} = await resp.json()\r\n\r\n    const gifs = data.map(img =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n\r\n\r\n    \r\n    return gifs;\r\n}\r\n","import React from 'react'\r\nexport const GifGridItem = ({img}) => {\r\n    \r\n    \r\n    return (\r\n        <div className = 'card animate__animated animate__fadeIn'>\r\n            <img src={img.url} alt= {img.title} />\r\n            <p>{img.title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React  from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'; \r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images /*('images es un alias')*/ , loading } = useFetchGifs(category)\r\n\r\n    return (\r\n        <>\r\n        <h3 className = 'animate__animated animate__fadeIn'>{ category }</h3>\r\n        {loading && <p className = 'animate__animated animate__flash'>Loading</p> }\r\n        { <div className = 'card-grid'>\r\n                {\r\n                    images.map(item =>\r\n                       \r\n                        <GifGridItem\r\n                         key= {item.id}\r\n                         img = {item} \r\n                         />\r\n                    )\r\n                }\r\n          \r\n        </div> }\r\n    </>) \r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n   \r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading: true\r\n\r\n\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then(imgs => {\r\n\r\n            setstate({\r\n            data: imgs,\r\n            loading: false\r\n\r\n            });\r\n\r\n        })\r\n    }, [category])\r\n\r\n    return state;\r\n}\r\n","import React, {useState} from 'react';\r\nimport {AddCategory} from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport  const GifExpertApp = () => {\r\n\r\n\r\n    const [categories, setCategories] = useState(['Dragon Ball Z',])\r\n\r\n\r\n    //const handleAdd = (e) =>{\r\n     \r\n      // const anime = e.target.value\r\n\r\n       // setcategories([...categories, anime])\r\n   // }\r\n\r\n\r\n    return(\r\n    <>\r\n        <h2> GifExpertApp </h2>\r\n        <AddCategory setCategories= {setCategories} />\r\n        <hr/>\r\n        <ol>\r\n            {\r\n                categories.map(item => (\r\n                    \r\n                    <GifGrid\r\n                    key =  {item}\r\n                    category = {item} />\r\n\r\n                ))\r\n            }\r\n\r\n        </ol>\r\n    </>\r\n )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}